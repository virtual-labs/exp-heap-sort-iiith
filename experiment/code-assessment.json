{
    "version": 1,
    "experiment name": "Experiment Name",
    "problems": [
        {
            "problem name": "Heap Sort Simplified",
            "description": "Implement a simplified heap sort algorithm to sort the given input list of numbers. You need to implement the buildHeap and heapSort methods for sorting.",
            "inputs": [
                [64, 66, 20, 49, 11, 79, 21, 20, 99]
            ],
            "expected": [11, 20, 20, 21, 49, 64, 66, 79, 99],
            "inputs description": "Input consists of an array of unsorted numbers. It may be of arbitrary length.",
            "expected description": "An array of numbers sorted in ascending order.",
            "difficulty": "beginner"
        },
        {
            "problem name": "Find k Largest Elements",
            "description": "Given an array of integers, find the k largest elements using heap sort.",
            "inputs": [
                [3, 2, 1, 5, 6, 4],
                2
            ],
            "expected": [6, 5],
            "inputs description": "Input consists of an array of integers and an integer k.",
            "expected description": "An array of integers containing the k largest elements in descending order.",
            "difficulty": "beginner"
        },
        {
            "problem name": "Sort Nearly Sorted Array",
            "description": "Given an array where each element is at most k positions away from its sorted position, sort the array using heap sort. To solve this problem, you should use a min-heap to keep track of the smallest elements. Specifically, maintain a min-heap of size k+1 to process the elements. This will allow you to efficiently extract the minimum element and keep the rest of the elements in sorted order.",
            "inputs": [
                [6, 5, 3, 2, 8, 10, 9], 
                3
            ],
            "expected": [2, 3, 5, 6, 8, 9, 10],
            "inputs description": "Input consists of an array of integers and an integer k.",
            "expected description": "A sorted array.",
            "difficulty": "advanced"
        }
    ]
}